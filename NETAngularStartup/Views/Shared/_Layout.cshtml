<!DOCTYPE html>
<html lang="@ViewData["culture"]">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="@(ViewData["metaDescription"] ?? ".NETAngularStartup - Startup Application - Running .NET 9 + Angular 19+")">
    <!-- Title -->
    <title>@(ViewData["Home"] != null ? $".NETAngularStartup - {ViewData["pageTitle"]}" : $"{ViewData["pageTitle"]} - .NETAngularStartup")</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/custom.css">
    @RenderSection("styles", required: false)
</head>
<body class="d-flex flex-column min-vh-100">

    <partial name="~/Views/Shared/_Header.cshtml" />
   
    <!-- Main Content -->
    <main class="flex-grow-1 mt-5 pt-4">
       @RenderBody()
    </main>

    <!-- Footer -->
    <partial name="~/Views/Shared/_Footer.cshtml" />

    <!-- Cookie Consent Banner -->
    <div id="cookieConsentBanner" class="d-flex flex-column flex-md-row justify-content-between align-items-center">
        <div class="mb-3 mb-md-0 me-md-3">
            <p class="mb-0">
                We use cookies to enhance your experience. By continuing, you agree to our
                <a href="/cookie-policy" class="text-primary">Cookie Policy</a>.
            </p>
        </div>
        <div class="d-flex flex-wrap justify-content-center">
            <button id="rejectAllCookies" class="btn btn-outline-light cookie-btn">
                <i class="bi bi-x-circle"></i> Reject All
            </button>
            <button id="customizeCookies" class="btn btn-outline-light cookie-btn">
                <i class="bi bi-gear"></i> Customize
            </button>
            <button id="acceptAllCookies" class="btn btn-primary cookie-btn">
                <i class="bi bi-check-circle"></i> Accept All
            </button>
        </div>
    </div>

    <!-- Cookie Settings Modal -->
    <div class="modal fade" id="cookieSettingsModal" tabindex="-1" aria-labelledby="cookieSettingsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cookieSettingsModalLabel">Cookie Preferences</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-4">
                        <p>Manage your cookie preferences below. Essential cookies cannot be disabled as they are necessary for website functionality.</p>
                    </div>

                    <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="essentialCookies" checked disabled>
                        <label class="form-check-label" for="essentialCookies">
                            <strong>Essential Cookies</strong>
                            <small class="d-block text-muted">Required for security, login, and core functionality.</small>
                        </label>
                    </div>

                    <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="functionalCookies" checked>
                        <label class="form-check-label" for="functionalCookies">
                            <strong>Functional Cookies</strong>
                            <small class="d-block text-muted">Remember your preferences (language, theme, etc.).</small>
                        </label>
                    </div>

                    <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="analyticsCookies">
                        <label class="form-check-label" for="analyticsCookies">
                            <strong>Analytics Cookies</strong>
                            <small class="d-block text-muted">Help us improve by collecting anonymous usage data.</small>
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveCookiePreferences">Save Preferences</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and Popper.js -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    @RenderSection("scripts", required: false)

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Cookie functions
            const COOKIE_CONSENT_NAME = 'netstr_cookie_consent';
            const COOKIE_SETTINGS_NAME = 'netstr_cookie_settings';

            // Check if user has already made a choice
            function hasCookieConsent() {
                return document.cookie.split(';').some(item => item.trim().startsWith(COOKIE_CONSENT_NAME + '='));
            }

            // Get current cookie preferences
            function getCookiePreferences() {
                const cookie = document.cookie
                    .split('; ')
                    .find(row => row.startsWith(COOKIE_SETTINGS_NAME + '='));

                if (cookie) {
                    const value = cookie.split('=')[1];
                    try {
                        return JSON.parse(decodeURIComponent(value));
                    } catch (e) {
                        return null;
                    }
                }
                return null;
            }

            // Set cookie preferences
            function setCookiePreferences(settings) {
                const expires = new Date();
                expires.setFullYear(expires.getFullYear() + 1); // 1 year expiration

                document.cookie = `${COOKIE_CONSENT_NAME}=true; expires=${expires.toUTCString()}; path=/; SameSite=Lax`;
                document.cookie = `${COOKIE_SETTINGS_NAME}=${encodeURIComponent(JSON.stringify(settings))}; expires=${expires.toUTCString()}; path=/; SameSite=Lax`;

                applyCookiePreferences(settings);
                hideBanner();
            }

            // Apply preferences to actual cookies/scripts
            function applyCookiePreferences(settings) {
                console.log('Applying cookie preferences:', settings);

                // Example: Load analytics scripts if enabled
                if (settings.analytics) {
                    console.log('Loading analytics scripts...');
                    // Load Google Analytics or other tracking scripts here
                }
            }

            // Hide banner after choice is made
            function hideBanner() {
                const banner = document.getElementById('cookieConsentBanner');
                banner.classList.remove('show');
            }

            // Initialize modal toggles based on current preferences
            function initModalToggles() {
                const prefs = getCookiePreferences();
                const modal = new bootstrap.Modal(document.getElementById('cookieSettingsModal'));

                if (prefs) {
                    document.getElementById('functionalCookies').checked = prefs.functional;
                    document.getElementById('analyticsCookies').checked = prefs.analytics;
                }

                // Open modal when customize button clicked
                document.getElementById('customizeCookies').addEventListener('click', function() {
                    modal.show();
                });

                // Save preferences
                document.getElementById('saveCookiePreferences').addEventListener('click', function() {
                    const settings = {
                        essential: true, // Always true
                        functional: document.getElementById('functionalCookies').checked,
                        analytics: document.getElementById('analyticsCookies').checked
                    };

                    setCookiePreferences(settings);
                    modal.hide();
                });
            }

            // Show banner if no consent given
            function showBannerIfNeeded() {
                if (!hasCookieConsent()) {
                    const banner = document.getElementById('cookieConsentBanner');
                    banner.classList.add('show');
                } else {
                    // Apply existing preferences
                    const prefs = getCookiePreferences();
                    if (prefs) {
                        applyCookiePreferences(prefs);
                    }
                }
            }

            // Set up button actions
            document.getElementById('acceptAllCookies').addEventListener('click', function() {
                setCookiePreferences({
                    essential: true,
                    functional: true,
                    analytics: true
                });
            });

            document.getElementById('rejectAllCookies').addEventListener('click', function() {
                setCookiePreferences({
                    essential: true,
                    functional: false,
                    analytics: false
                });
            });

            // Initialize everything
            initModalToggles();
            showBannerIfNeeded();
        });
    </script>

</body>
</html>