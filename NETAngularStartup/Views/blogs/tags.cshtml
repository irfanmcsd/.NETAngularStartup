@using DevCodeArchitect.DBContext
@using DevCodeArchitect.Entity
@using DevCodeArchitect.Utilities
@inject ApplicationDBContext _context

@{
    var Culture = "en";
    var cultureObj = ViewData["culture"];
    if (cultureObj is string cultureStr && !string.IsNullOrEmpty(cultureStr))
    {
        Culture = cultureStr;
    }
    List<Categories>? categoryHierarchy = null;

}

<section class="sub-page-banner relative">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-banner text-center">
                    <h1 class="sub-banner-title">Blog Tags</h1>
                    <ul>
                        <li><a href="/@Culture">Home</a></li>
                        <li><a href="/@Culture/blog">Blog</a></li>
                        <li>Tags</li>
                    </ul>

                </div>
            </div>
        </div>
    </div>
</section>

<section class="blog-list ptb-100 primary-color">
    <div class="container">
        <div class="row">

            <div class="col-xl-8 col-lg-8 col-md-12 order_md-1">
                <div class="blog-list-main">

                    @{
                        var Tags = await TagsBLL.LoadItems(_context, new TagQueryEntity()
                        {
                            LoadAll = true,
                            IsEnabled = Types.ActionTypes.Enabled,
                            TagType = TagEnum.TagType.Normal,
                            Type = TagEnum.Types.Blog,
                            Culture = Culture,
                            IsCache = true
                        });

                        if (Tags != null && Tags.Count > 0)
                        {
                            <ul class="tag-list">
                                @{
                                    @foreach(var Item in Tags)
                                    {
                                        var TagUrl = "/" + Culture + "/blog/tag/" + Item.Term + "/";
                                        <li class="tag-item">
                                            <a class="tag-link" href="@TagUrl">
                                                @Item.Title.Trim()
                                            </a>
                                        </li>
                                    }
                                }

                            </ul>
                        }
                        else
                        {
                            <div class="blog-not-found-container">
                                <div class="not-found-header text-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" fill="#6c757d" viewBox="0 0 16 16" class="mb-3">
                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                        <path d="M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z" />
                                    </svg>
                                    <h1 class="mb-3">No Tags or Labels Found</h1>
                                    <p class="lead text-muted">We couldn’t locate any tags or labels matching your selection. It might be misspelled, outdated, or not yet categorized.</p>
                                </div>

                                <div class="suggestions-box">
                                    <h3 class="mb-4">Here’s what you can try instead:</h3>

                                    <div class="suggestion-item">
                                        <div class="suggestion-number">1</div>
                                        <div class="suggestion-content">
                                            <h4>Browse All Blog Posts</h4>
                                            <p>Check out our full list of blog articles to find topics that interest you.</p>
                                            <a href="/blog" class="btn btn-outline-primary btn-sm mt-2">View All Posts</a>
                                        </div>
                                    </div>

                                    <div class="suggestion-item">
                                        <div class="suggestion-number">2</div>
                                        <div class="suggestion-content">
                                            <h4>Use the Search Function</h4>
                                            <p>Try searching with different or broader keywords to discover relevant content.</p>
                                        </div>
                                    </div>

                                    <div class="suggestion-item">
                                        <div class="suggestion-number">3</div>
                                        <div class="suggestion-content">
                                            <h4>Explore Blog Categories</h4>
                                            <p>Navigate through our curated blog categories to explore content by topic.</p>
                                            <a href="/blog/categories" class="btn btn-outline-primary btn-sm mt-2">Browse Categories</a>
                                        </div>
                                    </div>

                                    <div class="suggestion-item">
                                        <div class="suggestion-number">4</div>
                                        <div class="suggestion-content">
                                            <h4>Read Popular Posts</h4>
                                            <div class="popular-posts-links mt-2">
                                                <a href="#" class="btn btn-outline-primary btn-sm me-2 mb-2">Getting Started</a>
                                                <a href="#" class="btn btn-outline-primary btn-sm me-2 mb-2">Top AI Trading Tips</a>
                                                <a href="#" class="btn btn-outline-primary btn-sm me-2 mb-2">Bot Deployment Guide</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="cta-section text-center mt-5">
                                    <p class="mb-3">Can’t find what you’re looking for?</p>
                                    <a href="/contact" class="btn btn-primary">Request a Blog Topic</a>
                                </div>
                            </div>

                        }
                    }
                  </div>
            </div>

            <div class="col-xl-4 col-lg-4 col-md-12 order_md-2">
                <div class="blog-sidebar">

                    @{

                        var Docs = await CategoriesBLL.LoadItems(_context, new CategoryQueryEntity()
            {
                type = CategoryEnum.Types.Blogs,
                LoadAll = true,
                IsEnabled = Types.ActionTypes.Enabled,
                Culture = Culture,
                IsCache = true
            });

                        if (Docs != null && Docs.Count > 0)
                        {
                            var hierarchyService = new CategoryHierarchyService();
                            categoryHierarchy = hierarchyService.BuildHierarchy(Docs, 0);

                            @if (categoryHierarchy != null && categoryHierarchy.Count > 0)
                            {
                                <div class="category-nav-container">
                                    <nav class="navbar navbar-expand-md category-bg flex-column align-items-start">
                                        <div class="offcanvas-body p-0 w-100">
                                            <ul class="navbar-nav flex-column w-100 mb-4" id="categoryNav">
                                                @{
                                                    var firstParent = categoryHierarchy.FirstOrDefault();
                                                    var currentTerm = ViewData["term"]
                                                    ?? ViewData["term"] as string
                                                    ?? firstParent?.Term;
                                                }
                                                @foreach (var item in categoryHierarchy)
                                                {
                                                    @if (item.CategoryData != null)
                                                    {
                                                        var url = "/" + Culture + "/blog/" + item.Term + "/";
                                                        var isFirstParent = item == firstParent;
                                                        var isActive = string.Equals(currentTerm as string, item.Term, StringComparison.Ordinal) || (currentTerm == null && isFirstParent);
                                                        var model = new CategoryNavItemModel
                            {
                                Item = item,
                                Url = url,
                                Level = 0,
                                IsFirstParent = isFirstParent,
                                Path = "/" + Culture + "/blog"
                            };
                                                        <partial name="_CategoryNavItem" model="model" />

                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </nav>
                                </div>
                            }

                        }

                    }

                </div>
            </div>

        </div>
    </div>
</section>


